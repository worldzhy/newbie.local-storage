// !! ------------------------------------------------------------ //
// !!            [Microservice] Storage models             //
// !! ------------------------------------------------------------ //
// * LocalFile                                                     //
// * GoogleFile                                                    //
// * GoogleFilePermission                                          //
// * S3File                                                        //
// * ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ //

model LocalFile {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String
  originalName String?
  type         String // could be 'Folder'
  size         Int? // in bytes
  parentId     String?  @db.Uuid
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@schema("microservice/storage")
}

model GoogleFile {
  id             String                 @id // Generated by google
  name           String
  type           String?
  size           Int? // in bytes
  iconLink       String?
  webViewLink    String?
  webContentLink String?
  parentId       String?
  createdAt      DateTime               @default(now())
  updatedAt      DateTime               @updatedAt
  permissions    GoogleFilePermission[]

  @@schema("microservice/storage")
}

model GoogleFilePermission {
  id           Int        @id @default(autoincrement())
  permissionId String // Generated by google, (permissionId + fileId) is unique.
  type         String
  role         String
  email        String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  file         GoogleFile @relation(fields: [fileId], references: [id], onDelete: Cascade)
  fileId       String

  @@schema("microservice/storage")
}

model S3File {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  type       String // could be 'Folder'
  size       Int? // in bytes
  s3Bucket   String
  s3Key      String // File name in S3 bucket.
  s3Response Json?
  parentId   String?  @db.Uuid
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@schema("microservice/storage")
}

model S3Bucket {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("microservice/storage")
}
